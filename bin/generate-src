#!/bin/env scala

val r1 = """.*(?: val .*Attr[ \.]| extends ).*""".r.pattern
val r2 = """^\s*(?://|\*).*""".r.pattern
val r3 = """.*(?:override|private| val +values).*""".r.pattern
val r4 = """^.* (?:object|val) +| *=.+| +extends.*""".r
val r5 = """^[a-z].*""".r.pattern

val infile  = "core/src/main/scala/japgolly/scalacss/Attrs.scala"
val outfile = "core/src/main/scala/japgolly/scalacss/generated.scala"

val attrs =
  io.Source.fromFile(infile).mkString.split("\n").toStream
    .filter   (r1.matcher(_).matches)
    .filterNot(r2.matcher(_).matches)
    .filterNot(r3.matcher(_).matches)
    .map      (r4.replaceAllIn(_, ""))
    .filter   (r5.matcher(_).matches)
    .sorted
    .map(a => s"  @inline final def $a = Attrs.$a")

val attrAliases =
s"""
  |package japgolly.scalacss
  |
  | // Note: This is generated by bin/generate-src
  | // It used to be (and should be) part of SBT but that made life in IntelliJ a complete and utter hell.
  |
  |abstract class AttrAliasesAndValueTRules extends ValueT.Rules {
  |${attrs mkString "\n"}
  |}
""".stripMargin

import java.nio.file._
val bytes = attrAliases.getBytes("UTF-8")
Files.write(Paths.get(outfile), bytes)
