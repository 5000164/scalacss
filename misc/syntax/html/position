<h2 id="Syntax">Syntax</h2>
<pre class="twopartsyntaxbox"><a href="/en-US/docs/CSS/Value_definition_syntax" title="CSS/Value_definition_syntax">Formal syntax</a>: <code>static <a href="/en-US/docs/CSS/Value_definition_syntax#Single_bar" title="Single bar: the two entities are optional, but exactly one must be present.">|</a> relative <a href="/en-US/docs/CSS/Value_definition_syntax#Single_bar" title="Single bar: the two entities are optional, but exactly one must be present.">|</a> absolute <a href="/en-US/docs/CSS/Value_definition_syntax#Single_bar" title="Single bar: the two entities are optional, but exactly one must be present.">|</a> sticky <a href="/en-US/docs/CSS/Value_definition_syntax#Single_bar" title="Single bar: the two entities are optional, but exactly one must be present.">|</a> fixed</code></pre>
<pre>position: static
position: relative
position: absolute
position: fixed
position: sticky

position: inherit
</pre>
<h3 id="Values">Values</h3>
<dl><dt>
  <code>static</code></dt>
 <dd>
  This keyword lets the element use the normal behavior, that is it is laid out in its current position in the flow.  The<code> top</code>,<code> right</code>,<code> bottom</code>, <code>left</code> and <code>z-index</code> properties do not apply.</dd>
 <dt>
  <code>relative</code></dt>
 <dd>
  This keyword lays out all elements as though the element were not positioned, and then adjust the element's position, without changing layout (and thus leaving a gap for the element where it would have been had it not been positioned). The effect of <code>position:relative</code> on <code>table-*-group</code>, <code>table-row</code>, <code>table-column</code>, <code>table-cell</code>, and <code>table-caption</code> elements is undefined.</dd>
 <dt>
  <code>absolute</code></dt>
 <dd>
  Do not leave space for the element. Instead, position it at a specified position relative to its closest positioned ancestor or to the containing block. Absolutely positioned boxes can have margins, they do not collapse with any other margins.</dd>
 <dt>
  <span style="font-family: 'Courier New', 'Andale Mono', monospace; font-weight: inherit; line-height: normal;">fixed</span></dt>
 <dd>
  Do not leave space for the element. Instead, position it at a specified position relative to the screen's viewport and don't move it when scrolled. When printing, position it at that fixed position on <em>every page</em>.</dd>
</dl><dl><dt>
  <code style="font-size: 14px;">sticky</code> <span title="This is an experimental API that should not be used in production code."><i class="icon-beaker"> </i></span></dt>
 <dd>
  The box position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its flow root and containing block and in all cases, including <code style="font-size: 14px;">table</code> elements, does not affect the position of any following boxes. When a box B is stickily positioned, the position of the following box is calculated as though B were not offset. The effect of ‘<code style="font-size: 14px;">position: sticky</code>’ on <code style="font-size: 14px;">table</code> elements is the same as for ‘<code style="font-size: 14px;">position: relative</code>’.</dd>
</dl>